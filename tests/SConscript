# -*- python -*-
Import("env")
import glob, os

for src in glob.glob("*.cc"):
    env.Program(src, LIBS=env.getlibs(env["eups_product"]))

#
# Tests
#
import lsst.tests

tests = lsst.tests.Control(env, verbose = True)
tests.run("FormatterRegistry_*.cc")
tests.run("Persistence_3.cc")
tests.run("PropertySetPersist.cc")

if os.environ.has_key('LSST_DB_AUTH') or os.path.exists("/tmp/lsst.db.auth"):
    if os.environ.has_key('LSST_DB_AUTH'):
        env['ENV']['LSST_DB_AUTH'] = os.environ['LSST_DB_AUTH']
    tests.run("DateTime_1.cc")
    tests.run("DbStorage_*.cc")
    tests.run("Persistence_1.cc")
    tests.run("Persistence_2.cc")
    tests.run("Persistence_2.py")
else:
    print "WARNING: No fallback database authenticator seen"
    print "Database tests are being skipped"

for target in [tests.run("DbStorage_1.py"), tests.run("Persistence_1.py")]:
    env.Depends(target,
                    "../python/lsst/daf/persistence/_persistenceLib%s" % (env['LDMODULESUFFIX']))
